[{"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\index.js":"1","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\reportWebVitals.js":"2","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\App.js":"3","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\dreamers\\dreamers.js":"4","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\login\\login.js":"5","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\single-supporter\\single-supporter.js":"6","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\single-dreamer\\single-dreamer.js":"7","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\supporters\\supporters.js":"8","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\utils\\fetch.js":"9","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\table\\table.js":"10","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\sidebar\\sidebar.js":"11","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\header\\header.js":"12","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\modal-supporter\\modal-supporter.js":"13","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\row\\row.js":"14","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\pagination\\pagination.js":"15","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\quotas\\quotas.js":"16","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\table-supporter\\table.js":"17","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\modal-dreamer\\modal.js":"18","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\single-supporter-modal\\single-supporter-modal.js":"19","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\row-supporter\\row.js":"20","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\modal-general\\modal.js":"21","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\utils\\fetchSocinal.js":"22","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\associates\\associates.js":"23","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\companies\\companies.js":"24","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\company-table\\company-table.js":"25","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\company-row\\company-row.js":"26","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\single-company\\single-company.js":"27","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\associate-table\\associate-table.js":"28","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\associate-row\\associate-row.js":"29","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\single-associate\\single-associate.js":"30","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\modal-company\\modal-company.js":"31"},{"size":517,"mtime":1678933215705,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1678933215711,"results":"34","hashOfConfig":"33"},{"size":1445,"mtime":1699499142272,"results":"35","hashOfConfig":"33"},{"size":1820,"mtime":1699492347499,"results":"36","hashOfConfig":"33"},{"size":3426,"mtime":1701049583374,"results":"37","hashOfConfig":"33"},{"size":14404,"mtime":1684462533938,"results":"38","hashOfConfig":"33"},{"size":65572,"mtime":1698377220740,"results":"39","hashOfConfig":"33"},{"size":2101,"mtime":1684462571223,"results":"40","hashOfConfig":"33"},{"size":1957,"mtime":1700706998907,"results":"41","hashOfConfig":"33"},{"size":489,"mtime":1678933215704,"results":"42","hashOfConfig":"33"},{"size":3026,"mtime":1701048846381,"results":"43","hashOfConfig":"33"},{"size":764,"mtime":1699501139413,"results":"44","hashOfConfig":"33"},{"size":890,"mtime":1684462437061,"results":"45","hashOfConfig":"33"},{"size":1001,"mtime":1684462453042,"results":"46","hashOfConfig":"33"},{"size":1983,"mtime":1678933215695,"results":"47","hashOfConfig":"33"},{"size":559,"mtime":1678933215696,"results":"48","hashOfConfig":"33"},{"size":648,"mtime":1678933215702,"results":"49","hashOfConfig":"33"},{"size":1703,"mtime":1678933215690,"results":"50","hashOfConfig":"33"},{"size":543,"mtime":1678933215701,"results":"51","hashOfConfig":"33"},{"size":802,"mtime":1678933215696,"results":"52","hashOfConfig":"33"},{"size":2751,"mtime":1685578421528,"results":"53","hashOfConfig":"33"},{"size":10750,"mtime":1697596844232,"results":"54","hashOfConfig":"33"},{"size":1847,"mtime":1699498509122,"results":"55","hashOfConfig":"33"},{"size":1784,"mtime":1701048735823,"results":"56","hashOfConfig":"33"},{"size":543,"mtime":1698722996471,"results":"57","hashOfConfig":"33"},{"size":465,"mtime":1699327119849,"results":"58","hashOfConfig":"33"},{"size":19150,"mtime":1701050264839,"results":"59","hashOfConfig":"33"},{"size":565,"mtime":1699497228789,"results":"60","hashOfConfig":"33"},{"size":556,"mtime":1699498678204,"results":"61","hashOfConfig":"33"},{"size":12432,"mtime":1700190760829,"results":"62","hashOfConfig":"33"},{"size":1515,"mtime":1700705675299,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"ep0040",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\index.js",[],["137","138"],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\reportWebVitals.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\App.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\dreamers\\dreamers.js",["139"],"import \"./dreamers.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Header from \"../../components/header/header\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport Table from \"../../components/table/table\";\r\nimport API from \"../../utils/fetch\"\r\n\r\nexport default function Dreamers() {\r\n  const [dreamers, setDreamers] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n  const [offset, setOffset] = React.useState(0);\r\n  const [totalDreamers, setTotalDreamers] = React.useState();\r\n  const headers = [\r\n    \"Nome\",\r\n    \"Situação\",\r\n    \"Score\",\r\n    \"Risco\",\r\n    \"Meta\",\r\n    \"Progresso\",\r\n    \"Dias\",\r\n    \"Apoios\",\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    setOffset(currentPage * 13 - 13);\r\n\r\n\tconst getDreamers = async () =>{\r\n\t\tconst response = await API.dreamers((currentPage * 13 - 13))\r\n\t\tconst data = response.data;\r\n\t\tsetTotalPages(data.dados.totalDePaginas);\r\n        setCurrentPage(data.dados.paginaAtual);\r\n        setDreamers(data.dados.sonhadores);\r\n        setTotalDreamers(data.dados.totalDeSonhadores);\r\n\t}\r\n getDreamers()\r\n  }, [currentPage]);\r\n\r\n  return dreamers ? (\r\n    <div className=\"Dreamers\">\r\n      <Sidebar dreamers={true} supporters={false} interests={false} />\r\n      <div className=\"dreamers-container\">\r\n        <Header total={totalDreamers} owner=\"empreendedores\" single={false} />\r\n        <div className=\"dreamers-content\">\r\n          <Table dreamers={dreamers} headers={headers} />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            setCurrentPage={setCurrentPage}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n}\r\n","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\login\\login.js",["140"],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\single-supporter\\single-supporter.js",["141","142"],"import \"./single-supporter.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Header from \"../../components/header/header\";\r\nimport Profile from \"../../assets/profile.png\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport API from \"../../utils/fetch\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport Modal from \"react-modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ModalDreamer from \"../../components/modal-dreamer/modal\";\r\n\r\nexport default function SingleSupporter() {\r\n  const [data, setData] = React.useState();\r\n  const [birth, setBirth] = React.useState();\r\n  const { params } = useRouteMatch();\r\n  const [modalIsOpen, setModalIsOpen] = React.useState(false);\r\n  const [saveModalIsOpen, setSaveModalIsOpen] = React.useState(false);\r\n  const [photoModalIsOpen, setPhotoModalIsOpen] = React.useState(false);\r\n  const [ photosrc, setphotosrc ] = React.useState('')\r\n  const history = useHistory();\r\n\r\n  const showModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const showPhotoModal = () => {\r\n    setPhotoModalIsOpen(true);\r\n  };\r\n\r\n  const hidePhotoModal = () => {\r\n    setPhotoModalIsOpen(false);\r\n  };\r\n\r\n  const showSaveModal = () => {\r\n    setSaveModalIsOpen(true);\r\n  };\r\n\r\n  const hideSaveModal = () => {\r\n    setSaveModalIsOpen(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const getSupporter = async () => {\r\n      const response = await API.getSupporter(params.id);\r\n      const data = response.data;\r\n      console.log(data);\r\n      setData({\r\n        supporterData: data.dados.supporterData,\r\n        dreamsData: data.dados.dreamsData,\r\n      });\r\n      setBirth(data.dados.supporterData.birthdate.split(\"T\", 1).toString());\r\n    };\r\n    getSupporter();\r\n  }, []);\r\n  return data ? (\r\n    <div class=\"SingleSupporter\">\r\n      <Sidebar dreamers={false} supporters={true} interests={false} />\r\n      {console.log(\"p´perra\", data)}\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={{\r\n          name: data.supporterData.name,\r\n          birthdate: birth,\r\n          cpf: data.supporterData.cpf,\r\n          cep: data.supporterData.cep,\r\n          phonenumber: data.supporterData.phonenumber,\r\n          email: data.supporterData.email,\r\n          picture: data.supporterData.picture,\r\n        }}\r\n        onSubmit={async (formValues) => {\r\n          console.log(JSON.stringify(formValues, null, 2));\r\n          showSaveModal();\r\n\r\n          let formData = new FormData();\r\n\r\n          formData.append(\"name\", formValues.name);\r\n          formData.append(\"birthdate\", formValues.birthdate);\r\n          formData.append(\"cpf\", formValues.cpf);\r\n          formData.append(\"cep\", formValues.cep);\r\n          formData.append(\"phonenumber\", formValues.phonenumber);\r\n          formData.append(\"email\", formValues.email);\r\n          formData.append(\"picture\", formValues.picture);\r\n\r\n          const response = await API.attSupporter(params.id, formData);\r\n          const data = response.data;\r\n          console.log(data);\r\n          showSaveModal();\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          name: Yup.string().required(\"Campo requerido\"),\r\n          birthdate: Yup.string().required(\"Campo requerido\"),\r\n          phonenumber: Yup.string().required(\"Campo requerido\"),\r\n          cep: Yup.string().required(\"Campo requerido\"),\r\n          cpf: Yup.string().required(\"Campo requerido\"),\r\n          email: Yup.string().email().required(\"Campo requerido\"),\r\n        })}\r\n      >\r\n        {(props) => {\r\n          const {\r\n            values,\r\n            setFieldValue,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            errors,\r\n            touched,\r\n          } = props;\r\n          return (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"supporters-container\">\r\n                <Header owner=\"financiadores\" single={true} />\r\n                <div className=\"supporters-content\">\r\n                  <div className=\"header\">\r\n                    <img\r\n                      src={\r\n                        data.supporterData.picture\r\n                          ? data.supporterData.picture\r\n                          : Profile\r\n                      }\r\n                      alt=\"imagem de perfil\"\r\n                    />\r\n                    <h2>{data.supporterData.name}</h2>\r\n                  </div>\r\n\r\n                  <div className=\"supporter-profile\">\r\n                    <div className=\"supporter-profile-content\">\r\n                      <div className=\"left\">\r\n                        <div className=\"profile-header\">\r\n                          <h4>Informações de Cadastro</h4>\r\n                        </div>\r\n                        <div className=\"profile\">\r\n                          <label>\r\n                            <p>Nome Completo</p>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"name\"\r\n                              value={values.name}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          {errors.name && touched.name && (\r\n                            <div className=\"input-feedback\">{errors.name}</div>\r\n                          )}\r\n                          <label>\r\n                            <p>Data de Nascimento</p>\r\n                            <input\r\n                              type=\"date\"\r\n                              id=\"birthdate\"\r\n                              value={values.birthdate}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          {errors.birthdate && touched.birthdate && (\r\n                            <div className=\"input-feedback\">\r\n                              {errors.birthdate}\r\n                            </div>\r\n                          )}\r\n                          <label>\r\n                            <p>CPF</p>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"cpf\"\r\n                              value={values.cpf}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          {errors.cpf && touched.cpf && (\r\n                            <div className=\"input-feedback\">{errors.cpf}</div>\r\n                          )}\r\n                          <label>\r\n                            <p>CEP</p>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"cep\"\r\n                              value={values.cep}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          {errors.cep && touched.cep && (\r\n                            <div className=\"input-feedback\">{errors.cep}</div>\r\n                          )}\r\n                          <label>\r\n                            <p>Telefone</p>\r\n                            <input\r\n                              type=\"tel\"\r\n                              id=\"phone\"\r\n                              value={values.phonenumber}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          {errors.phoneNumber && touched.phoneNumber && (\r\n                            <div className=\"input-feedback\">\r\n                              {errors.phoneNumber}\r\n                            </div>\r\n                          )}\r\n                          <label>\r\n                            <p>E-Mail</p>\r\n                            <input\r\n                              type=\"text\"\r\n                              id=\"email\"\r\n                              value={values.email}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </label>\r\n                          {errors.email && touched.email && (\r\n                            <div className=\"input-feedback\">{errors.email}</div>\r\n                          )}\r\n                          <label>\r\n                            <p>Editar foto</p>\r\n                            <div class=\"file\">\r\n                              <p>Carregar foto</p>\r\n                              <input\r\n                                type=\"file\"\r\n                                id=\"picture\"\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(event.currentTarget.files[0]);\r\n\t\t\t\t\t\t\t\t\tlet reader = new FileReader()\r\n\t\t\t\t\t\t\t\t\treader.onloadend = () => {\r\n\t\t\t\t\t\t\t\t\t\tsetphotosrc(reader.result)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treader.readAsDataURL(event.target.files[0])\r\n\t\t\t\t\t\t\t\t\tsetFieldValue(\"picture\", event.target.files[0]);\r\n\t\t\t\t\t\t\t\t  }}\r\n                                onBlur={handleBlur}\r\n                              />\r\n\t\t\t\t\t\t\t <Modal\r\n                                isOpen={photoModalIsOpen}\r\n                                className=\"Modal\"\r\n                                overlayClassName=\"Overlay\"\r\n                              >\r\n                                <div className=\"close\">\r\n                                  <button onClick={hidePhotoModal}>x</button>\r\n                                </div>\r\n                                <ModalDreamer state=\"photo\" />\r\n                              </Modal>\r\n                            </div>\r\n                          </label>\r\n\t\t\t\t\t\t  {photosrc ? (<div className=\"input-feedback\"> Foto Alterada! </div>) : (<div></div>) }\r\n                          {errors.picture && touched.picture && (\r\n                            <div className=\"input-feedback\">\r\n                              {errors.picture}\r\n                            </div>\r\n                          )}\r\n                          <hr />\r\n\r\n                          <div className=\"question\">\r\n                            <p>Quanto deseja investir?</p>\r\n                            <span>{data.supporterData.investingbudget}</span>\r\n                          </div>\r\n                          <div className=\"question\">\r\n                            <p>Modalidade de investimento</p>\r\n                            <span>\r\n                              {data.supporterData.investingtype === 0\r\n                                ? \"Pontual\"\r\n                                : \"Recorrente\"}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"question\">\r\n                            <p>Possui experiência?</p>\r\n                            <span>\r\n                              {data.supporterData.hasinvestingexperience\r\n                                ? \"Sim\"\r\n                                : \"Não\"}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"right\">\r\n                        <div className=\"profile-header-right\">\r\n                          <h5>Projetos apoiados</h5>\r\n                        </div>\r\n\r\n                        <div className=\"profile\">\r\n                          <table>\r\n                            <thead>\r\n                              <tr>\r\n                                <th>Nome</th>\r\n                                <th>Cotas</th>\r\n                                <th>Risco</th>\r\n                              </tr>\r\n                            </thead>\r\n                            {data.dreamsData.map((element) => {\r\n                              return (\r\n                                <tbody\r\n                                  onClick={() => {\r\n                                    history.push(\r\n                                      `${process.env.PUBLIC_URL}/sonhador/${element.dreamid}`\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  <td>{element.name}</td>\r\n                                  <td>{element.count}</td>\r\n                                  <td>\r\n                                    {element.risk === 0\r\n                                      ? \"Alto\"\r\n                                      : element.risk === 1\r\n                                      ? \"Médio\"\r\n                                      : \"Baixo\"}\r\n                                  </td>\r\n                                </tbody>\r\n                              );\r\n                            })}\r\n                          </table>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    showModal();\r\n                  }}\r\n                >\r\n                  Deletar perfil\r\n                </button>\r\n                <Modal\r\n                  isOpen={modalIsOpen}\r\n                  className=\"Modal\"\r\n                  overlayClassName=\"Overlay\"\r\n                >\r\n                  <ModalDreamer\r\n                    state=\"delete\"\r\n                    id={data.supporterData.id}\r\n                    type=\"supporter\"\r\n                    hideModal={hideModal}\r\n                  />\r\n                </Modal>\r\n\r\n                <button type=\"submit\" className=\"submit\">\r\n                  Salvar\r\n                </button>\r\n                <Modal\r\n                  isOpen={saveModalIsOpen}\r\n                  className=\"Modal\"\r\n                  overlayClassName=\"Overlay\"\r\n                >\r\n                  <ModalDreamer state=\"save\" hideModal={hideSaveModal} />\r\n                </Modal>\r\n              </div>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n}\r\n","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\single-dreamer\\single-dreamer.js",["143","144","145","146","147"],"import \"./single-dreamer.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Header from \"../../components/header/header\";\r\nimport Profile from \"../../assets/profile.png\";\r\nimport { Formik } from \"formik\";\r\nimport API from \"../../utils/fetch\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport Modal from \"react-modal\";\r\nimport ModalDreamer from \"../../components/modal-dreamer/modal\";\r\nimport ModalSupporter from \"../../components/modal-supporter/modal-supporter\";\r\nimport More from \"../../assets/more.png\";\r\nimport * as Yup from \"yup\";\r\nimport Quotas from \"../../components/quotas/quotas\";\r\nimport APISocinal from \"../../utils/fetchSocinal\";\r\nimport Associates from \"../../components/associates/associates\";\r\n\r\nexport default function SingleDreamer() {\r\n  const history = useHistory();\r\n  const [data, setData] = React.useState();\r\n  const [birth, setBirth] = React.useState();\r\n  const [status, setStatus] = React.useState(\"0\");\r\n  const [risk, setRisk] = React.useState(null);\r\n  const { params } = useRouteMatch();\r\n  const [approvalBtn, setApprovalBtn] = React.useState(\"\");\r\n  const [reprovalBtn, setReprovalBtn] = React.useState(\"\");\r\n  const [low, setLow] = React.useState(\"\");\r\n  const [medium, setMedium] = React.useState(\"\");\r\n  const [high, setHigh] = React.useState(\"\");\r\n  const [modalIsOpen, setModalIsOpen] = React.useState(false);\r\n  const [saveModalIsOpen, setSaveModalIsOpen] = React.useState(false);\r\n  const [supporterModalIsOpen, setSupporterModalIsOpen] = React.useState(false);\r\n\r\n  const showModal = () => {\r\n    setModalIsOpen(true);\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  const showSaveModal = () => {\r\n    setSaveModalIsOpen(true);\r\n  };\r\n\r\n  const hideSaveModal = () => {\r\n    setSaveModalIsOpen(false);\r\n    window.location.reload();\r\n  };\r\n\r\n  const showSupportersModal = () => {\r\n    setSupporterModalIsOpen(true);\r\n  };\r\n\r\n  const hideSupportersModal = () => {\r\n    setSupporterModalIsOpen(false);\r\n  };\r\n  React.useEffect(() => {\r\n    const getCompany = async () => {\r\n      const response = await API.getCompany(params.id);\r\n      const data = response.data.dados;\r\n    }\r\n    getCompany();\r\n  })\r\n  React.useEffect(() => {\r\n    const getDreamer = async () => {\r\n      const response = await API.getDreamer(params.id);\r\n      const data = response.data.dados;\r\n      setData({\r\n        user: data.user,\r\n        dream: data.dream,\r\n        supporters: data.allSupporters,\r\n      });\r\n      setBirth(data.user.birthdate.split(\"T\", 1).toString());\r\n      if (data.dream.status === 0) {\r\n        setApprovalBtn(\"\");\r\n        setStatus(0);\r\n        setReprovalBtn(\"orange\");\r\n      } else {\r\n        setApprovalBtn(\"active-btn\");\r\n        setReprovalBtn(\"\");\r\n        setStatus(1);\r\n      }\r\n\r\n      if (data.dream.risk === 0) {\r\n        setHigh(\"orange\");\r\n        setLow(\"\");\r\n        setMedium(\"\");\r\n        setRisk(0);\r\n      } else if (data.dream.risk === 1) {\r\n        setHigh(\"\");\r\n        setLow(\"\");\r\n        setMedium(\"orange\");\r\n        setRisk(1);\r\n      } else if (data.dream.risk === 2) {\r\n        setHigh(\"\");\r\n        setLow(\"orange\");\r\n        setMedium(\"\");\r\n        setRisk(2);\r\n      } else {\r\n        setHigh(\"\");\r\n        setLow(\"\");\r\n        setMedium(\"\");\r\n      }\r\n    };\r\n    getDreamer();\r\n  }, []);\r\n  return data ? (\r\n    <div className=\"SingleDreamer\">\r\n      <Sidebar dreamers={true} supporters={false} interests={false} />\r\n      {data.dream.status === 1 ? (\r\n        <Formik\r\n          enableReinitialize={true}\r\n          initialValues={{\r\n            description: data.dream.description,\r\n            progress: data.progress,\r\n            cashgoal: data.dream.cashgoal,\r\n            quotasquantity: data.dream.quotasquantity,\r\n            status: data.dream.status,\r\n            risk: data.dream.risk,\r\n            name: data.user.name,\r\n            birthdate: birth,\r\n            cpf: data.user.cpf,\r\n            cep: data.user.cep,\r\n            phonenumber: data.user.phonenumber,\r\n            email: data.user.email,\r\n            picture: data.user.picture,\r\n          }}\r\n          onSubmit={async (formValues) => {\r\n            formValues.status = status;\r\n            formValues.risk = risk;\r\n            console.log(JSON.stringify(formValues, null, 2));\r\n            showSaveModal();\r\n\r\n            let formData = new FormData();\r\n\r\n            formData.append(\"description\", formValues.description);\r\n            formData.append(\"cashgoal\", formValues.cashgoal);\r\n            formData.append(\"quotasquantity\", formValues.quotasquantity);\r\n            formData.append(\"status\", formValues.status);\r\n            formData.append(\"risk\", formValues.risk);\r\n            formData.append(\"name\", formValues.name);\r\n            formData.append(\"birthdate\", formValues.birthdate);\r\n            formData.append(\"cpf\", formValues.cpf);\r\n            formData.append(\"cep\", formValues.cep);\r\n            formData.append(\"phonenumber\", formValues.phonenumber);\r\n            formData.append(\"email\", formValues.email);\r\n            formData.append(\"picture\", formValues.picture);\r\n\r\n            const response = await API.attDreamer(params.id, formData);\r\n            const data = response.data;\r\n            console.log(data);\r\n            showSaveModal();\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            name: Yup.string().required(\"Campo requerido\"),\r\n            birthdate: Yup.string().required(\"Campo requerido\"),\r\n            phonenumber: Yup.string().required(\"Campo requerido\"),\r\n            cep: Yup.string().required(\"Campo requerido\"),\r\n            cpf: Yup.string().required(\"Campo requerido\"),\r\n            email: Yup.string().email().required(\"Campo requerido\"),\r\n            description: Yup.string().required(\"Campo requerido\"),\r\n            cashgoal: Yup.number().required(\"Campo requerido\"),\r\n            quotasquantity: Yup.number().required(\"Campo requerido\"),\r\n            risk: Yup.number().required(\"Campo requerido\"),\r\n          })}\r\n        >\r\n          {(props) => {\r\n            const {\r\n              values,\r\n              setFieldValue,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              errors,\r\n              touched,\r\n            } = props;\r\n            return (\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"dreamers-container\">\r\n                  <Header owner=\"Empreendedores\" single={true} />\r\n                  <div className=\"dreamers-content\">\r\n                    <div className=\"header\">\r\n                      {/* <img\r\n                        src={data.user.picture ? data.user.picture : Profile}\r\n                        alt=\"imagem de perfil\"\r\n                      /> */}\r\n                      <h2>{data.user.name}</h2>\r\n                    </div>\r\n\r\n                    <div className=\"content\">\r\n                      <div className=\"left\">\r\n                        <span>Descrição</span>\r\n                        <textarea\r\n                          id=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          readOnly\r\n                        />\r\n\r\n                        {errors.description && touched.description && (\r\n                          <div className=\"input-feedback\">\r\n                            {errors.description}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                      <div className=\"right\">\r\n                        {/* <div className=\"progress\">\r\n                          <span>Progresso</span>\r\n                          <div className=\"quotas\">\r\n                            <Quotas\r\n                              quotas={data.dream.quotas}\r\n                              total={data.dream.quotasquantity}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        {errors.progress && touched.progress && (\r\n                          <div className=\"input-feedback\">\r\n                            {errors.progress}\r\n                          </div>\r\n                        )} */}\r\n\r\n                        <div className=\"numbers\">\r\n                          <div className=\"goal\">\r\n                            <span>Valor Solicitado</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              readOnly\r\n                              className=\"gray\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"goal\">\r\n                            <span>Valor Aprovado</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              readOnly\r\n                              className=\"gray\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"goal\">\r\n                            <span>Tx. abertura de relacionamento</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              readOnly\r\n                              className=\"gray\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"numbers\">\r\n                          <div className=\"goal\">\r\n                            <span>Tx. de juros efetiva</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              readOnly\r\n                              className=\"gray\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"goal\">\r\n                            <span>CET</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              readOnly\r\n                              className=\"gray\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"goal\">\r\n                            <span>CET ao ano</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              readOnly\r\n                              className=\"gray\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"numbers\">\r\n                          <div className=\"goal\">\r\n                            <span>Prazo</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              readOnly\r\n                              className=\"gray\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"goal\">\r\n                            <span>Parcelas</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              readOnly\r\n                              className=\"gray\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"goal\">\r\n                            <span>Valor de cada parcela</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              readOnly\r\n                              className=\"gray\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"numbers\">\r\n                          <div className=\"goal\">\r\n                            <span>Valor Total a pagar</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              readOnly\r\n                              className=\"gray\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        {/* <div className=\"supporters\">\r\n                          <div className=\"supporters-preview\">\r\n                            {data.supporters.map((supporter, i) => {\r\n                              if (i <= 8) {\r\n                                return (\r\n                                  <img data-toggle=\"tooltip\" title={supporter.name}\r\n                                    onClick={() => {\r\n                                      history.push(\r\n                                        `${process.env.PUBLIC_URL}/apoiador/${supporter.id}`\r\n                                      );\r\n                                    }}\r\n                                    src={supporter.picture ? supporter.picture : Profile}\r\n                                    alt=\"foto financiador\"\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\";\r\n                              }\r\n                            })}\r\n\r\n                            {data.supporters.length > 8 ? (\r\n                              <div\r\n                                className=\"more\"\r\n                                onClick={() => {\r\n                                  showSupportersModal();\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                <img src={More} alt=\"mais financiadores\" />\r\n                                <span>{data.supporters.length - 8}+</span>\r\n                              </div>\r\n                            ) : (\r\n                              <div></div>\r\n                            )}\r\n                          </div>\r\n                        </div> */}\r\n                        <Modal\r\n                          isOpen={supporterModalIsOpen}\r\n                          className=\"Modal-supporter-container\"\r\n                          overlayClassName=\"Overlay\"\r\n                        >\r\n                          <ModalSupporter\r\n                            hideModal={hideSupportersModal}\r\n                            supporters={data.supporters}\r\n                          />\r\n                        </Modal>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n\r\n                    </div>\r\n\r\n                    <div className=\"dreamer-profile\">\r\n                      <h3>Perfil da empresa</h3>\r\n                      <div className=\"dreamer-profile-content\">\r\n                        {/*<div className=\"left\">\r\n                           <div className=\"profile-header\">\r\n                            <h4>Questionário</h4>\r\n                            <span>\r\n                              Score: <span>{data.dream.total_score}</span>\r\n                            </span>\r\n                          </div>\r\n\r\n                          <div className=\"profile\">\r\n                            <div className=\"question\">\r\n                              <p>\r\n                                Você planeja complementar a renda ou quer\r\n                                trabalhar pra você mesmo?\r\n                              </p>\r\n                              <span>\r\n                                {data.dream.question1_status === 0\r\n                                  ? \"Complementar a renda\"\r\n                                  : \"Trabalhar para mim\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>\r\n                                Você está trabalhando ou está desempregado?  \r\n                              </p>\r\n                              <span>\r\n                                {data.dream.question2_status === 0\r\n                                  ? \"Trabalhando\"\r\n                                  : \"Desempregado\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>\r\n                                Você quer mudar de ramo ou continuar com a\r\n                                profissão que tem?\r\n                              </p>\r\n                              <span>\r\n                                {data.dream.question3_status === 0\r\n                                  ? \"Mudar\"\r\n                                  : \"Continuar\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>\r\n                                O negócio que quer montar é fixo, uma banca de\r\n                                lanches por exemplo, ou ambulante como um carro\r\n                                de lanches?\r\n                              </p>\r\n                              <span>\r\n                                {data.dream.question4_status === 0\r\n                                  ? \"Fixo\"\r\n                                  : \"Ambulante\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>Vai ser no seu bairro mesmo?</p>\r\n                              <span>\r\n                                {data.dream.question5_status === 0\r\n                                  ? \"No meu bairro\"\r\n                                  : \"Outra Região\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>\r\n                                Já fez ou está fazendo algum curso de\r\n                                empreendedorismo ou de investimento pessoal?\r\n                              </p>\r\n                              <span>\r\n                                {data.dream.question6_status === 0\r\n                                  ? \"Sim\"\r\n                                  : \"Não\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>Valor estimado</p>\r\n                              <span>{data.dream.estimatedcashgoal}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div> */}\r\n                        {/* \r\n                        <div className=\"left\">\r\n                          <div className=\"profile-header\">\r\n                            <h4>Informações de Cadastro</h4>\r\n                          </div>\r\n\r\n                          <div className=\"profile\">\r\n                            <label>\r\n                              <p>Nome Completo</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.name && touched.name && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.name}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Data de Nascimento</p>\r\n                              <input\r\n                                type=\"date\"\r\n                                id=\"birthdate\"\r\n                                value={values.birthdate}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.birthdate && touched.birthdate && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.birthdate}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>CPF</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"cpf\"\r\n                                value={values.cpf}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.cpf && touched.cpf && (\r\n                              <div className=\"input-feedback\">{errors.cpf}</div>\r\n                            )}\r\n                            <label>\r\n                              <p>CEP</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"cep\"\r\n                                value={values.cep}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.cep && touched.cep && (\r\n                              <div className=\"input-feedback\">{errors.cep}</div>\r\n                            )}\r\n                            <label>\r\n                              <p>Telefone</p>\r\n                              <input\r\n                                type=\"tel\"\r\n                                id=\"phone\"\r\n                                value={values.phonenumber}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.phonenumber && touched.phonenumber && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.phonenumber}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>E-Mail</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Editar foto</p>\r\n                              <div class=\"file\">\r\n                                <p>Carregar foto</p>\r\n                                <input\r\n                                  type=\"file\"\r\n                                  id=\"picture\"\r\n                                  onChange={(event) => {\r\n                                    console.log(event.currentTarget.files[0]);\r\n                                    setFieldValue(\r\n                                      \"picture\",\r\n                                      event.target.files[0]\r\n                                    );\r\n                                  }}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </div>\r\n                            </label>\r\n\r\n                            {photosrc ? (\r\n                              <div className=\"input-feedback\">\r\n                                {\" \"}\r\n                                Foto Alterada!{\" \"}\r\n                              </div>\r\n                            ) : (\r\n                              <div></div>\r\n                            )}\r\n                            {errors.picture && touched.picture && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.picture}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div> */}\r\n                        <div className=\"left\">\r\n                          <div className=\"profile-header\">\r\n                            <h4>Informações</h4>\r\n                          </div>\r\n                          <div className=\"profile\">\r\n                            <label>\r\n                              <p>Razão Social</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.name && touched.name && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.name}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Nome Fantasia</p>\r\n                              <input\r\n                                type=\"date\"\r\n                                id=\"birthdate\"\r\n                                value={values.birthdate}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.birthdate && touched.birthdate && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.birthdate}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>CNPJ</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"cpf\"\r\n                                value={values.cpf}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.cpf && touched.cpf && (\r\n                              <div className=\"input-feedback\">{errors.cpf}</div>\r\n                            )}\r\n                            <label>\r\n                              <p>Data de Abertura/Constituição</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"cep\"\r\n                                value={values.cep}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.cep && touched.cep && (\r\n                              <div className=\"input-feedback\">{errors.cep}</div>\r\n                            )}\r\n                            <label>\r\n                              <p>Número de Telefone Principal</p>\r\n                              <input\r\n                                type=\"tel\"\r\n                                id=\"phone\"\r\n                                value={values.phonenumber}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.phonenumber && touched.phonenumber && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.phonenumber}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Número de Telefone Celular</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Inscrião Estadual</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Instagram</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Site da empresa</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            {/* <label>\r\n                              <p>Editar foto</p>\r\n                              <div class=\"file\">\r\n                                <p>Carregar foto</p>\r\n                                <input\r\n                                  type=\"file\"\r\n                                  id=\"picture\"\r\n                                  onChange={(event) => {\r\n                                    console.log(event.currentTarget.files[0]);\r\n                                    setFieldValue(\r\n                                      \"picture\",\r\n                                      event.target.files[0]\r\n                                    );\r\n                                  }}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </div>\r\n                            </label> */}\r\n                            {/* \r\n                            {photosrc ? (\r\n                              <div className=\"input-feedback\">\r\n                                {\" \"}\r\n                                Foto Alterada!{\" \"}\r\n                              </div>\r\n                            ) : (\r\n                              <div></div>\r\n                            )}\r\n                            {errors.picture && touched.picture && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.picture}\r\n                              </div>\r\n                            )} */}\r\n                          </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"right\">\r\n                          <div className=\"profile-header\">\r\n                            <h4>Endereço</h4>\r\n                          </div>\r\n                          <div className=\"profile\">\r\n                            <label>\r\n                              <p>CEP</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Número</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Complemento</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Logradouro</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Bairro</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Cidade</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Estado</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>País</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"left\">\r\n                      <div className=\"socios\">\r\n                        <h3>Sócios</h3>\r\n                        <Associates />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"integrations\">\r\n                      <span>Socinal</span>\r\n                      <div className=\"buttons\">\r\n                        <button onClick={() => { APISocinal.getTokenSocinal() }}\r\n                          className={approvalBtn} type=\"button\">Token</button>\r\n                      </div>\r\n                      <span>Documentação</span>\r\n                      <div className=\"buttons\">\r\n                        <button onClick={() => { APISocinal.EnviarDocumentoGeral() }}\r\n                          className={approvalBtn} type=\"button\">Enviar documento geral</button>\r\n                        <div className=\"buttons\">\r\n                          <button onClick={() => { APISocinal.EnviarDocumentoProposta() }}\r\n                            className={approvalBtn} type=\"button\">Enviar documento de proposta</button>\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                          <button onClick={() => { APISocinal.EnviarDocumentoCliente() }}\r\n                            className={approvalBtn} type=\"button\">Enviar documento do cliente</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      showModal();\r\n                    }}\r\n                  >\r\n                    Deletar perfil\r\n                  </button>\r\n                  <Modal\r\n                    isOpen={modalIsOpen}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                  >\r\n                    <ModalDreamer\r\n                      state=\"delete\"\r\n                      id={data.user.id}\r\n                      type=\"dreamer\"\r\n                      hideModal={hideModal}\r\n                    />\r\n                  </Modal>\r\n\r\n                  <button type=\"submit\" className=\"submit\">\r\n                    Salvar\r\n                  </button>\r\n                  <Modal\r\n                    isOpen={saveModalIsOpen}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                  >\r\n                    <ModalDreamer state=\"save\" hideModal={hideSaveModal} />\r\n                  </Modal>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      ) : (\r\n        <Formik\r\n          enableReinitialize={true}\r\n          initialValues={{\r\n            description: data.dream.description,\r\n            progress: data.progress,\r\n            cashgoal: data.dream.cashgoal,\r\n            quotasquantity: data.dream.quotasquantity,\r\n            status: data.dream.status,\r\n            risk: data.dream.risk,\r\n            name: data.user.name,\r\n            birthdate: birth,\r\n            cpf: data.user.cpf,\r\n            cep: data.user.cep,\r\n            phonenumber: data.user.phonenumber,\r\n            email: data.user.email,\r\n            picture: data.user.picture,\r\n          }}\r\n          onSubmit={async (formValues) => {\r\n            formValues.status = status;\r\n            formValues.risk = risk;\r\n            console.log(JSON.stringify(formValues, null, 2));\r\n            console.log(formValues.picture);\r\n\r\n            let data = new FormData();\r\n\r\n            data.append(\"description\", formValues.description);\r\n            data.append(\"cashgoal\", formValues.cashgoal);\r\n            data.append(\"quotasquantity\", formValues.quotasquantity);\r\n            data.append(\"status\", formValues.status);\r\n            data.append(\"risk\", formValues.risk);\r\n            data.append(\"name\", formValues.name);\r\n            data.append(\"birthdate\", formValues.birthdate);\r\n            data.append(\"cpf\", formValues.cpf);\r\n            data.append(\"cep\", formValues.cep);\r\n            data.append(\"phonenumber\", formValues.phonenumber);\r\n            data.append(\"email\", formValues.email);\r\n            data.append(\"picture\", formValues.picture);\r\n\r\n            showSaveModal();\r\n            const response = await API.attDreamer(params.id, data);\r\n            console.log(response);\r\n            showSaveModal();\r\n          }}\r\n          validationSchema={Yup.object().shape(\r\n            status == 1\r\n              ? {\r\n                name: Yup.string().required(\"Campo requerido\"),\r\n                birthdate: Yup.string().required(\"Campo requerido\"),\r\n                phonenumber: Yup.string().required(\"Campo requerido\"),\r\n                cep: Yup.string().required(\"Campo requerido\"),\r\n                cpf: Yup.string().required(\"Campo requerido\"),\r\n                email: Yup.string().email().required(\"Campo requerido\"),\r\n                description: Yup.string().required(\"Campo requerido\"),\r\n                cashgoal: Yup.number()\r\n                  .typeError(\"Não pode ser 0\")\r\n                  .required(\"Campo requerido\"),\r\n                quotasquantity: Yup.number()\r\n                  .typeError(\"Não pode ser 0\")\r\n                  .required(\"Campo requerido\"),\r\n                // risk: Yup.number.typeError('Selecione alguma opção').required(\"Campo requerido\"),\r\n              }\r\n              : {\r\n                name: Yup.string().required(\"Campo requerido\"),\r\n                birthdate: Yup.string().required(\"Campo requerido\"),\r\n                phonenumber: Yup.string().required(\"Campo requerido\"),\r\n                cep: Yup.string().required(\"Campo requerido\"),\r\n                cpf: Yup.string().required(\"Campo requerido\"),\r\n                email: Yup.string().email().required(\"Campo requerido\"),\r\n                description: Yup.string().required(\"Campo requerido\"),\r\n              }\r\n          )}\r\n        >\r\n          {(props) => {\r\n            const {\r\n              values,\r\n              errors,\r\n              touched,\r\n              setFieldValue,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n            } = props;\r\n            return (\r\n              <form onSubmit={handleSubmit}>\r\n                <div className=\"dreamers-container\">\r\n                  <Header owner=\"Empreendedores\" single={true} />\r\n                  <div className=\"dreamers-content\">\r\n                    <div className=\"header\">\r\n                      <img\r\n                        src={data.user.picture && data.user.picture !== 'null' ? data.user.picture : Profile}\r\n                        alt=\"imagem de perfil\"\r\n                      />\r\n                      <h2>{data.user.name}</h2>\r\n                    </div>\r\n\r\n                    <div className=\"content\">\r\n                      <div className=\"left\">\r\n                        <span>Descrição</span>\r\n                        <textarea\r\n                          id=\"description\"\r\n                          value={values.description}\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                        />\r\n                      </div>\r\n                      <div className=\"right\">\r\n                        <div className=\"progress\">\r\n                          <span>Progresso</span>\r\n                          <div className=\"quotas\">\r\n                            <Quotas\r\n                              quotas={data.dream.quotas}\r\n                              total={data.dream.quotasquantity}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"numbers\">\r\n                          <div className=\"goal\">\r\n                            <span>Valor da Meta</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"cashgoal\"\r\n                              placeholder=\"0\"\r\n                              value={values.cashgoal}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"dreamer-quotas\">\r\n                            <span>Cotas</span>\r\n                            <input\r\n                              type=\"number\"\r\n                              id=\"quotasquantity\"\r\n                              value={values.quotasquantity}\r\n                              onChange={handleChange}\r\n                              onBlur={handleBlur}\r\n                              placeholder=\"0\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        {errors.cashgoal && touched.cashgoal && (\r\n                          <div className=\"input-feedback\">\r\n                            {errors.cashgoal}\r\n                          </div>\r\n                        )}\r\n\r\n                        {errors.quotasquantity && touched.quotasquantity && (\r\n                          <div className=\"input-feedback\">\r\n                            {errors.quotasquantity}\r\n                          </div>\r\n                        )}\r\n                        <div className=\"risk\">\r\n                          <span>Risco de Investimento</span>\r\n                          <div className=\"buttons\">\r\n                            <button\r\n                              className={high}\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                setRisk(0);\r\n                                setHigh(\"orange\");\r\n                                setLow(\"\");\r\n                                setMedium(\"\");\r\n                              }}\r\n                            >\r\n                              Alto\r\n                            </button>\r\n                            <button\r\n                              className={medium}\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                setRisk(1);\r\n                                setHigh(\"\");\r\n                                setLow(\"\");\r\n                                setMedium(\"orange\");\r\n                              }}\r\n                            >\r\n                              Médio\r\n                            </button>\r\n                            <button\r\n                              className={low}\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                setRisk(2);\r\n                                setHigh(\"\");\r\n                                setLow(\"orange\");\r\n                                setMedium(\"\");\r\n                              }}\r\n                            >\r\n                              Baixo\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                        {errors.risk && touched.risk && (\r\n                          <div className=\"input-feedback\">{errors.risk}</div>\r\n                        )}\r\n                        <div className=\"supporters\">\r\n                          <span>\r\n                            Financiadores{\" \"}\r\n                            <span>\r\n                              {data.supporters\r\n                                ? `${data.supporters.length} financiadores`\r\n                                : \"\"}\r\n                            </span>\r\n                          </span>\r\n\r\n                          {data.supporters.length === 0 ? (\r\n                            <p>Sem financiadores até o momento</p>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n\r\n                          <div className=\"supporters-preview\">\r\n                            {data.supporters.map((supporter, i) => {\r\n                              if (i <= 8) {\r\n                                return (\r\n                                  <img\r\n                                    onClick={() => {\r\n                                      history.push(\r\n                                        `${process.env.PUBLIC_URL}/apoiador/${supporter.id}`\r\n                                      );\r\n                                    }}\r\n                                    src={supporter.picture}\r\n                                    alt=\"foto financiador\"\r\n                                  />\r\n                                );\r\n                              } else {\r\n                                return \"\";\r\n                              }\r\n                            })}\r\n                            {data.supporters.length > 8 ? (\r\n                              <div\r\n                                className=\"more\"\r\n                                onClick={() => {\r\n                                  showSupportersModal();\r\n                                }}\r\n                              >\r\n                                {\" \"}\r\n                                <img src={More} alt=\"mais financiadores\" />\r\n                                <span>{data.supporters.length - 8}+</span>\r\n                              </div>\r\n                            ) : (\r\n                              <div></div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                        <Modal\r\n                          isOpen={supporterModalIsOpen}\r\n                          className=\"Modal-supporter-container\"\r\n                          overlayClassName=\"Overlay\"\r\n                        >\r\n                          <ModalSupporter\r\n                            hideModal={hideSupportersModal}\r\n                            supporters={data.supporters}\r\n                          />\r\n                        </Modal>\r\n                        <div className=\"status\">\r\n                          <span>Status</span>\r\n                          <div className=\"buttons\">\r\n                            <button\r\n                              className={reprovalBtn}\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                setStatus(0);\r\n                                setReprovalBtn(\"orange\");\r\n                                setApprovalBtn(\"\");\r\n                              }}\r\n                            >\r\n                              Reprovar\r\n                            </button>\r\n                            <button\r\n                              className={approvalBtn}\r\n                              type=\"button\"\r\n                              onClick={() => {\r\n                                setStatus(1);\r\n                                setReprovalBtn(\"\");\r\n                                setApprovalBtn(\"active-btn\");\r\n                              }}\r\n                            >\r\n                              Aprovar\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"dreamer-profile\">\r\n                      <h3>Perfil do empreendedor</h3>\r\n                      <div className=\"dreamer-profile-content\">\r\n                        <div className=\"left\">\r\n                          <div className=\"profile-header\">\r\n                            <h4>Questionário</h4>\r\n                            <span>\r\n                              Score: <span>{data.dream.total_score}</span>\r\n                            </span>\r\n                          </div>\r\n\r\n                          <div className=\"profile\">\r\n                            <div className=\"question\">\r\n                              <p>\r\n                                Você planeja complementar a renda ou quer\r\n                                trabalhar pra você mesmo?\r\n                              </p>\r\n                              <span>\r\n                                {data.dream.question1_status === 0\r\n                                  ? \"Complementar a renda\"\r\n                                  : \"Trabalhar para mim\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>\r\n                                Você está trabalhando ou está desempregado?\r\n                              </p>\r\n                              <span>\r\n                                {data.dream.question2_status === 0\r\n                                  ? \"Trabalhando\"\r\n                                  : \"Desempregado\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>\r\n                                Você quer mudar de ramo ou continuar com a\r\n                                profissão que tem?\r\n                              </p>\r\n                              <span>\r\n                                {data.dream.question3_status === 0\r\n                                  ? \"Mudar\"\r\n                                  : \"Continuar\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>\r\n                                O negócio que quer montar é fixo, uma banca de\r\n                                lanches por exemplo, ou ambulante como um carro\r\n                                de lanches?\r\n                              </p>\r\n                              <span>\r\n                                {data.dream.question4_status === 0\r\n                                  ? \"Fixo\"\r\n                                  : \"Ambulante\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>Vai ser no seu bairro mesmo?</p>\r\n                              <span>\r\n                                {data.dream.question5_status === 0\r\n                                  ? \"No meu bairro\"\r\n                                  : \"Outra Região\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>\r\n                                Já fez ou está fazendo algum curso de\r\n                                empreendedorismo ou de investimento pessoal?\r\n                              </p>\r\n                              <span>\r\n                                {data.dream.question6_status === 0\r\n                                  ? \"Sim\"\r\n                                  : \"Não\"}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"question\">\r\n                              <p>Valor estimado</p>\r\n                              <span>{data.dream.estimatedcashgoal}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* <div className=\"right\">\r\n                          <div className=\"profile-header\">\r\n                            <h4>Informações de Cadastro</h4>\r\n                          </div>\r\n\r\n                          <div className=\"profile\">\r\n                            <label>\r\n                              <p>Nome Completo</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            <label>\r\n                              <p>Data de Nascimento</p>\r\n                              <input\r\n                                type=\"date\"\r\n                                id=\"birthdate\"\r\n                                value={values.birthdate}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            <label>\r\n                              <p>CPF</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"cpf\"\r\n                                value={values.cpf}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            <label>\r\n                              <p>CEP</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"cep\"\r\n                                value={values.cep}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            <label>\r\n                              <p>Telefone</p>\r\n                              <input\r\n                                type=\"tel\"\r\n                                id=\"phone\"\r\n                                value={values.phonenumber}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            <label>\r\n                              <p>E-Mail</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            <label>\r\n                              <p>Editar foto</p>\r\n                              <div class=\"file\">\r\n                                <p>Carregar foto</p>\r\n                                <input\r\n                                  type=\"file\"\r\n                                  id=\"picture\"\r\n                                  onChange={(event) => {\r\n                                    console.log(event.currentTarget.files[0]);\r\n                                    let reader = new FileReader();\r\n                                    reader.onloadend = () => {\r\n                                      setphotosrc(reader.result);\r\n                                    };\r\n                                    reader.readAsDataURL(event.target.files[0]);\r\n                                    setFieldValue(\r\n                                      \"picture\",\r\n                                      event.target.files[0]\r\n                                    );\r\n                                  }}\r\n                                  onBlur={handleBlur}\r\n                                />\r\n                              </div>\r\n                            </label>\r\n                            {photosrc ? (\r\n                              <div className=\"input-feedback\">\r\n                                {\" \"}\r\n                                Foto Alterada!{\" \"}\r\n                              </div>\r\n                            ) : (\r\n                              <div></div>\r\n                            )}\r\n                          </div>\r\n                        </div> */}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      showModal();\r\n                    }}\r\n                  >\r\n                    Deletar perfil\r\n                  </button>\r\n                  <Modal\r\n                    isOpen={modalIsOpen}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                  >\r\n                    <ModalDreamer\r\n                      state=\"delete\"\r\n                      id={data.user.id}\r\n                      type=\"dreamer\"\r\n                      hideModal={hideModal}\r\n                    />\r\n                  </Modal>\r\n\r\n                  <button type=\"submit\" className=\"submit\">\r\n                    Salvar\r\n                  </button>\r\n                  <Modal\r\n                    isOpen={saveModalIsOpen}\r\n                    className=\"Modal\"\r\n                    overlayClassName=\"Overlay\"\r\n                  >\r\n                    <ModalDreamer state=\"save\" hideModal={hideSaveModal} />\r\n                  </Modal>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n}\r\n","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\supporters\\supporters.js",["148","149"],"import \"./supporters.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Header from \"../../components/header/header\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport TableSupporter from \"../../components/table-supporter/table\";\r\nimport API from \"../../utils/fetch\"\r\n\r\nexport default function Supporters() {\r\n  const [supporters, setSupporters] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n  const [offset, setOffset] = React.useState(0);\r\n  const [totalSupporters, setTotalSupporters] = React.useState();\r\n  const headers = [\"Nome\", \"Apoio\", \"Investimento\"];\r\n\r\n  // integração de sonhadores que pode ser refatorada para ser usada aqui para apoiadores\r\n    React.useEffect(() => {\r\n      setOffset(currentPage * 13 - 13);\r\n      console.log(\"offset é:\", currentPage * 13 - 13);\r\n\t  const getSupporters = async () =>{\r\n\t\t  const response = await API.supporters((currentPage * 13 - 13))\r\n\t\t  const data = response.data\r\n\t\t  console.log(data);\r\n          setTotalPages(data.dados.totalDePaginas);\r\n          setCurrentPage(data.dados.paginaAtual);\r\n          setSupporters(data.dados.apoiadores);\r\n          console.log(totalPages, currentPage);\r\n          setTotalSupporters(data.dados.totalDeApoiadores);\r\n\t  }\r\ngetSupporters();\r\n    }, [currentPage]);\r\n\r\n  return supporters ?  (<div className=\"Supporters\">\r\n      <Sidebar dreamers={false} supporters={true} interests={false} />\r\n      <div className=\"supporters-container\">\r\n        {\r\n          //mudar 110 aqui pelo total de financiadores\r\n        }\r\n        <Header total={totalSupporters} owner=\"financiadores\" single={false} />\r\n        <div className=\"supporters-content\">\r\n          <TableSupporter supporters={supporters} headers={headers} />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            setCurrentPage={setCurrentPage}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (<div></div>)\r\n}\r\n","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\utils\\fetch.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\table\\table.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\sidebar\\sidebar.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\header\\header.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\modal-supporter\\modal-supporter.js",["165","166"],"import React from \"react\";\r\nimport \"./modal-supporter.css\";\r\nimport Supporter from \"../../assets/supporter.png\";\r\nimport Close from \"../../assets/close.png\";\r\nimport SingleSupporterModal from \"../single-supporter-modal/single-supporter-modal\";\r\n\r\nexport default function ModalSupporter(props) {\r\n  const { supporters, hideModal } = props;\r\n\r\n  return (\r\n    <div className=\"ModalSupporter\">\r\n      <div className=\"modal-container\">\r\n        <div className=\"close\">\r\n          <button onClick={hideModal}>\r\n            <img src={Close} />\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <h2>Financiadores deste projeto</h2>\r\n          <div className=\"supporter-container\">\r\n            {supporters.map((supporter) => {\r\n              return <SingleSupporterModal supporter={supporter} />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\row\\row.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\pagination\\pagination.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\quotas\\quotas.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\table-supporter\\table.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\modal-dreamer\\modal.js",["167","168"],"import React from \"react\";\r\nimport \"./modal.css\";\r\nimport API from \"../../utils/fetch\";\r\nimport Close from \"../../assets/close.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ModalDreamer(props) {\r\n  const { state, hideModal, id, type } = props;\r\n  const newToken = localStorage.getItem(\"token\");\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"Modal\">\r\n      <div className=\"close\">\r\n        <button onClick={hideModal}>\r\n          <img src={Close} />\r\n        </button>\r\n      </div>\r\n      {state === \"delete\" ? (\r\n        <div className=\"modal-container\">\r\n          <h2>Deletar perfil</h2>\r\n          <p>Você tem certeza que quer deletar este perfil?</p>\r\n          <div className=\"buttons-modal\">\r\n            <button\r\n              onClick={async () => {\r\n\t\t\t\t  const response = await API.deleteUser(id)\r\n\t\t\t\t  const data = response.data;\r\n\t\t\t\t  console.log(data)\r\n\t\t\t\t  if(response.status === 200 && type === 'dreamer'){\r\n\t\t\t\t\thistory.push(`${process.env.PUBLIC_URL}/sonhadores`)\r\n\t\t\t\t}else if (response.status === 200 && type === 'supporter'){\r\n\t\t\t\t\thistory.push(`${process.env.PUBLIC_URL}/apoiadores`)\r\n\t\t\t\t}\r\n              }}\r\n            >\r\n              Deletar perfil\r\n            </button>\r\n            <button onClick={hideModal}>Cancelar</button>\r\n          </div>\r\n        </div>\r\n      ) : state === \"save\" ? (\r\n        <div className=\"modal-container\">\r\n          <h2>Perfil</h2>\r\n          <p>As alterações foram salvas com sucesso.</p>\r\n          <div className=\"single\">\r\n            <button onClick={hideModal}>Ok</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\single-supporter-modal\\single-supporter-modal.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\row-supporter\\row.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\modal-general\\modal.js",["169"],"import React from \"react\";\r\nimport \"./modal.css\";\r\nimport API from \"../../utils/fetch\";\r\nimport Close from \"../../assets/close.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ModalGeneral(props) {\r\n  const { state, hideModal } = props;\r\n  const [isSheetsReady, setSheetsReady] = React.useState(false)\r\n  const [sheetLinks, setSheetLinks] = React.useState([])\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"Modal\">\r\n      <div className=\"close\">\r\n        <button onClick={hideModal}>\r\n          <img src={Close} />\r\n        </button>\r\n      </div>\r\n      {state === \"export\" ? (\r\n        <div className=\"modal-container\">\r\n          <h2>Exportar</h2>\r\n          <p>Deseja exportar todos os dados do Dashboard?</p>\r\n          <div className=\"buttons-modal\">\r\n            <button\r\n              onClick={async () => {\r\n                try {\r\n                  const res = await API.export();                  \r\n\r\n                  const sheetLinks = await res.data.dados.sheetsUrl;\r\n\r\n                  setSheetsReady(true)\r\n                  setSheetLinks(sheetLinks)\r\n                  \r\n                } catch (error) {\r\n                  console.log(error);\r\n                }\r\n              }}\r\n            >\r\n              Exportar\r\n            </button>\r\n            <button onClick={hideModal}>Cancelar</button>\r\n          </div>\r\n          {\r\n            isSheetsReady && \r\n            <div className=\"download-sheets-button-area\">\r\n              <button \r\n                onClick={ () => {\r\n                  window.open(sheetLinks[0])\r\n                  }\r\n                }\r\n              > Baixar relação de Empreendedores</button>\r\n              <button \r\n                onClick={ () => {\r\n                  window.open(sheetLinks[1])\r\n                  }\r\n                }\r\n              > Baixar relação de Financiadores</button>\r\n              <button \r\n                onClick={ () => {\r\n                  window.open(sheetLinks[2])\r\n                  }\r\n                }\r\n              > Baixar relação de Match</button>\r\n            </div>\r\n          }\r\n          \r\n        </div>\r\n      ) : state === \"logout\" ? (\r\n        <div className=\"modal-container\">\r\n          <h2>Sair</h2>\r\n          <p>Deseja sair do dashboard?</p>\r\n          <div className=\"buttons-modal\">\r\n            <button\r\n              onClick={() => {\r\n                localStorage.removeItem(\"token\");\r\n                history.push(`${process.env.PUBLIC_URL}/`);\r\n              }}\r\n            >\r\n              Sair\r\n            </button>\r\n            <button onClick={hideModal}>Cancelar</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\utils\\fetchSocinal.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\associates\\associates.js",["170","171"],"import \"./associates.css\";\r\nimport React from \"react\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Header from \"../../components/header/header\";\r\nimport Pagination from \"../../components/pagination/pagination\";\r\nimport AssociateTable from \"../../components/associate-table/associate-table\";\r\nimport API from \"../../utils/fetch\"\r\n\r\nfunction Associates(props) {\r\n  const companyId = props.companyId;\r\n  const [associates, setAssociates] = React.useState([]);\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n  const [totalPages, setTotalPages] = React.useState(0);\r\n  const [offset, setOffset] = React.useState(0);\r\n  const [totalAssociates, setTotalAssociates] = React.useState();\r\n  const headers = [\r\n    \"Nome\",\r\n    \"Cpf\",\r\n    \"Sócio Administrador\",\r\n    \"Assina pela empresa\"\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    setOffset(currentPage * 13 - 13);\r\n\t  const getAssociates = async () =>{\r\n\t\tconst response = await API.associates((currentPage * 13 - 13), companyId)\r\n\t\tconst data = response.data;\r\n\t\tsetTotalPages(data.dados.totalDePaginas);\r\n    setCurrentPage(data.dados.paginaAtual);\r\n    setAssociates(data.dados.socios);\r\n    setTotalAssociates(data.dados.totalDeSocios);\r\n\t}\r\n getAssociates()\r\n}, [currentPage, setCurrentPage, companyId]);\r\n\r\n  return associates ? (\r\n    <div className=\"Dreamers\">\r\n      <div className=\"dreamers-container\">\r\n        <Header total={totalAssociates} owner=\"sócios\" single={false} />\r\n        <div className=\"dreamers-content\">\r\n          <AssociateTable associates={associates} headers={headers} />\r\n          <Pagination\r\n            totalPages={totalPages}\r\n            setCurrentPage={setCurrentPage}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n        </div>\r\n      </div>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n}\r\n\r\nexport default Associates;","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\companies\\companies.js",["172"],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\company-table\\company-table.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\company-row\\company-row.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\single-company\\single-company.js",["173","174","175","176"],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\associate-table\\associate-table.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\associate-row\\associate-row.js",[],"C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\pages\\single-associate\\single-associate.js",["177","178","179","180","181","182"],"import \"./single-associate.css\";\r\nimport React from \"react\";\r\nimport API from \"../../utils/fetch\";\r\nimport Sidebar from \"../../components/sidebar/sidebar\";\r\nimport Header from \"../../components/header/header\";\r\nimport Associates from \"../../components/associates/associates\";\r\nimport { Formik } from \"formik\";\r\nimport { useHistory,useRouteMatch } from \"react-router-dom\";\r\n\r\nexport default function SingleAssociate()  {\r\n  const history = useHistory();\r\n  const { params } = useRouteMatch();\r\n  const [data, setData] = React.useState();\r\n  React.useEffect(() => {\r\n    const getAssociate = async () => {\r\n      const response = await API.getAssociate(params.id);\r\n      console.log(response.data.dados);\r\n      const data = response.data.dados;\r\n      setData({\r\n        id: data.id,\r\n        name: data.name,\r\n        cpf: data.cpf,\r\n        mothersname: data.mothersname,\r\n        politicallyexposed: data.politicallyexposed,\r\n        companyadm: data.companyadm,\r\n        signsforcompany: data.signsforcompany,\r\n        cep:data.cep,\r\n        number:data.numero,\r\n        address:data.address,\r\n        complement:data.complement,\r\n        city:data.city,\r\n        neighborhood:data.neighborhood,\r\n        state:data.state,\r\n        country:data.country,\r\n      });\r\n    }\r\n    getAssociate();\r\n  },[]);\r\n  return data ? (\r\n    <div className=\"SingleCompany\">\r\n      <Sidebar dreamers={false} companies={true} interests={false} />\r\n      {/*data.status*/1 === 1 ? (\r\n      <Formik\r\n        enableReinitialize={true}\r\n        initialValues={{\r\n          id: data.id,\r\n          name: data.name,\r\n          cpf: data.cpf,\r\n          mothersname: data.mothersname,\r\n          politicallyexposed: data.politicallyexposed,\r\n          companyadm: data.companyadm,\r\n          signsforcompany: data.signsforcompany,\r\n          \r\n        }}\r\n        onSubmit={async (formValues) => {\r\n          \r\n        }}\r\n        >\r\n          {(props) => {\r\n            const {\r\n              values,\r\n              setFieldValue,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n              errors,\r\n              touched,\r\n          } = props;\r\n          return (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"companies-container\">\r\n              <Header owner=\"sócio\" single={true} />\r\n                  <div className=\"companies-content\">\r\n                    <div className=\"dreamer-profile\">\r\n                      <h3>Perfil do Sócio</h3>\r\n                      <div className=\"dreamer-profile-content\">\r\n                        <div className=\"left\">\r\n                          <div className=\"profile-header\">\r\n                            <h4>Informações</h4>\r\n                          </div>\r\n                          <div className=\"profile\">\r\n                            <label>\r\n                              <p>Nome</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                value={data.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.name && touched.name && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.name}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>CPF</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"birthdate\"\r\n                                value={data.cpf}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.birthdate && touched.birthdate && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.birthdate}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Nome da mãe</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"cpf\"\r\n                                value={data.mothersname}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.cpf && touched.cpf && (\r\n                              <div className=\"input-feedback\">{errors.cpf}</div>\r\n                            )}\r\n                            <label>\r\n                              <p>Sócio Administrador?</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"phone\"\r\n                                value={data.companyadm === '1' ? \"Sim\" : \"Não\"}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.phonenumber && touched.phonenumber && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.phonenumber}\r\n                              </div>\r\n                            )}\r\n                             <label>\r\n                              <p>Assina pela empresa?</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"signsforcompany\"\r\n                                value={data.signsforcompany === '1' ? \"Sim\" : \"Não\"}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.cep && touched.cep && (\r\n                              <div className=\"input-feedback\">{errors.cep}</div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                          <div className=\"profile-header\">\r\n                            <h4>Endereço</h4>\r\n                          </div>\r\n                          <div className=\"profile\">\r\n                            <label>\r\n                              <p>CEP</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"cep\"\r\n                                value={data.cep}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Número</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={data.number}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Endereço</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={data.address}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Complemento</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={data.complement}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Bairro</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={data.neighborhood}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Cidade</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={data.city}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>Estado</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={data.state}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                            <label>\r\n                              <p>País</p>\r\n                              <input\r\n                                type=\"text\"\r\n                                id=\"email\"\r\n                                value={data.country}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                              />\r\n                            </label>\r\n                            {errors.email && touched.email && (\r\n                              <div className=\"input-feedback\">\r\n                                {errors.email}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                 </div>\r\n              </div>                             \r\n            </form>\r\n          )\r\n        }}\r\n        </Formik>  \r\n      ):(<div></div>)}\r\n    </div>\r\n    \r\n  ) : (<div></div>);\r\n}","C:\\source\\repos\\A-Grana-Solidaria\\grana-solidaria-admin\\src\\components\\modal-company\\modal-company.js",["183"],"import React from \"react\";\r\nimport \"./modal-company.css\";\r\nimport API from \"../../utils/fetch\";\r\nimport Close from \"../../assets/close.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ModalCompany(props) {\r\n  const { state, hideModal, id, type } = props;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"Modal\">\r\n      <div className=\"close\">\r\n        <button onClick={hideModal}>\r\n          <img src={Close} />\r\n        </button>\r\n      </div>\r\n      {state === \"delete\" ? (\r\n        <div className=\"modal-container\">\r\n          <h2>Deletar empresa</h2>\r\n          <p>Você tem certeza que quer deletar esta empresa?</p>\r\n          <div className=\"buttons-modal\">\r\n            <button\r\n              onClick={\r\n                async () => {\r\n\t\t\t\t        const response = await API.deleteCompany(id)\r\n\t\t\t\t        if(response.status === 200 && type === 'company') history.push(`${process.env.PUBLIC_URL}/empresas`)\r\n                }\r\n              }\r\n            >\r\n              Deletar empresa\r\n            </button>\r\n            <button onClick={hideModal}>Cancelar</button>\r\n          </div>\r\n        </div>\r\n      ) : state === \"save\" ? (\r\n        <div className=\"modal-container\">\r\n          <h2>Empresa</h2>\r\n          <p>As alterações foram salvas com sucesso.</p>\r\n          <div className=\"single\">\r\n            <button onClick={hideModal}>Ok</button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":13,"column":10,"nodeType":"190","messageId":"191","endLine":13,"endColumn":16},{"ruleId":"188","severity":1,"message":"192","line":8,"column":8,"nodeType":"190","messageId":"191","endLine":8,"endColumn":18},{"ruleId":"188","severity":1,"message":"193","line":32,"column":9,"nodeType":"190","messageId":"191","endLine":32,"endColumn":23},{"ruleId":"194","severity":1,"message":"195","line":61,"column":6,"nodeType":"196","endLine":61,"endColumn":8,"suggestions":"197"},{"ruleId":"188","severity":1,"message":"198","line":61,"column":13,"nodeType":"190","messageId":"191","endLine":61,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":107,"column":6,"nodeType":"196","endLine":107,"endColumn":8,"suggestions":"199"},{"ruleId":"188","severity":1,"message":"200","line":171,"column":15,"nodeType":"190","messageId":"191","endLine":171,"endColumn":28},{"ruleId":"201","severity":1,"message":"202","line":1030,"column":20,"nodeType":"203","messageId":"204","endLine":1030,"endColumn":22},{"ruleId":"188","severity":1,"message":"200","line":1063,"column":15,"nodeType":"190","messageId":"191","endLine":1063,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":13,"column":10,"nodeType":"190","messageId":"191","endLine":13,"endColumn":16},{"ruleId":"194","severity":1,"message":"205","line":32,"column":8,"nodeType":"196","endLine":32,"endColumn":21,"suggestions":"206"},{"ruleId":"188","severity":1,"message":"207","line":3,"column":8,"nodeType":"190","messageId":"191","endLine":3,"endColumn":16},{"ruleId":"188","severity":1,"message":"208","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":14},{"ruleId":"188","severity":1,"message":"209","line":10,"column":11,"nodeType":"190","messageId":"191","endLine":10,"endColumn":19},{"ruleId":"188","severity":1,"message":"210","line":10,"column":21,"nodeType":"190","messageId":"191","endLine":10,"endColumn":31},{"ruleId":"188","severity":1,"message":"211","line":10,"column":44,"nodeType":"190","messageId":"191","endLine":10,"endColumn":53},{"ruleId":"188","severity":1,"message":"212","line":10,"column":55,"nodeType":"190","messageId":"191","endLine":10,"endColumn":62},{"ruleId":"188","severity":1,"message":"213","line":11,"column":10,"nodeType":"190","messageId":"191","endLine":11,"endColumn":24},{"ruleId":"188","severity":1,"message":"214","line":11,"column":26,"nodeType":"190","messageId":"191","endLine":11,"endColumn":43},{"ruleId":"188","severity":1,"message":"215","line":13,"column":10,"nodeType":"190","messageId":"191","endLine":13,"endColumn":26},{"ruleId":"188","severity":1,"message":"216","line":13,"column":28,"nodeType":"190","messageId":"191","endLine":13,"endColumn":47},{"ruleId":"188","severity":1,"message":"217","line":14,"column":10,"nodeType":"190","messageId":"191","endLine":14,"endColumn":25},{"ruleId":"188","severity":1,"message":"218","line":14,"column":27,"nodeType":"190","messageId":"191","endLine":14,"endColumn":45},{"ruleId":"188","severity":1,"message":"219","line":15,"column":10,"nodeType":"190","messageId":"191","endLine":15,"endColumn":27},{"ruleId":"188","severity":1,"message":"220","line":18,"column":9,"nodeType":"190","messageId":"191","endLine":18,"endColumn":24},{"ruleId":"188","severity":1,"message":"221","line":22,"column":9,"nodeType":"190","messageId":"191","endLine":22,"endColumn":24},{"ruleId":"188","severity":1,"message":"222","line":3,"column":8,"nodeType":"190","messageId":"191","endLine":3,"endColumn":17},{"ruleId":"223","severity":1,"message":"224","line":15,"column":13,"nodeType":"225","endLine":15,"endColumn":32},{"ruleId":"188","severity":1,"message":"226","line":9,"column":9,"nodeType":"190","messageId":"191","endLine":9,"endColumn":17},{"ruleId":"223","severity":1,"message":"224","line":16,"column":11,"nodeType":"225","endLine":16,"endColumn":30},{"ruleId":"223","severity":1,"message":"224","line":17,"column":11,"nodeType":"225","endLine":17,"endColumn":30},{"ruleId":"188","severity":1,"message":"227","line":3,"column":8,"nodeType":"190","messageId":"191","endLine":3,"endColumn":15},{"ruleId":"188","severity":1,"message":"189","line":14,"column":10,"nodeType":"190","messageId":"191","endLine":14,"endColumn":16},{"ruleId":"188","severity":1,"message":"189","line":13,"column":10,"nodeType":"190","messageId":"191","endLine":13,"endColumn":16},{"ruleId":"188","severity":1,"message":"228","line":13,"column":9,"nodeType":"190","messageId":"191","endLine":13,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":64,"column":5,"nodeType":"196","endLine":64,"endColumn":7,"suggestions":"229"},{"ruleId":"188","severity":1,"message":"230","line":111,"column":17,"nodeType":"190","messageId":"191","endLine":111,"endColumn":25},{"ruleId":"188","severity":1,"message":"200","line":118,"column":15,"nodeType":"190","messageId":"191","endLine":118,"endColumn":28},{"ruleId":"188","severity":1,"message":"231","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":18},{"ruleId":"188","severity":1,"message":"228","line":11,"column":9,"nodeType":"190","messageId":"191","endLine":11,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":38,"column":5,"nodeType":"196","endLine":38,"endColumn":7,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":42,"column":23,"nodeType":"203","messageId":"235","endLine":42,"endColumn":30},{"ruleId":"188","severity":1,"message":"236","line":61,"column":15,"nodeType":"190","messageId":"191","endLine":61,"endColumn":21},{"ruleId":"188","severity":1,"message":"200","line":62,"column":15,"nodeType":"190","messageId":"191","endLine":62,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":15,"column":11,"nodeType":"225","endLine":15,"endColumn":30},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"no-unused-vars","'offset' is assigned a value but never used.","Identifier","unusedVar","'jwt_decode' is defined but never used.","'showPhotoModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["239"],"'data' is assigned a value but never used.",["240"],"'setFieldValue' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has a missing dependency: 'totalPages'. Either include it or remove the dependency array.",["241"],"'Dreamers' is defined but never used.","'Export' is defined but never used.","'dreamers' is assigned a value but never used.","'supporters' is assigned a value but never used.","'interests' is assigned a value but never used.","'socinal' is assigned a value but never used.","'activeDreamers' is assigned a value but never used.","'setActiveDreamers' is assigned a value but never used.","'activeSupporters' is assigned a value but never used.","'setActiveSupporters' is assigned a value but never used.","'activeInterests' is assigned a value but never used.","'setActiveInterests' is assigned a value but never used.","'exportModalIsOpen' is assigned a value but never used.","'showExportModal' is assigned a value but never used.","'hideExportModal' is assigned a value but never used.","'Supporter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'newToken' is assigned a value but never used.","'Sidebar' is defined but never used.","'history' is assigned a value but never used.",["242"],"'response' is assigned a value but never used.","'Associates' is defined but never used.",["243"],"no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","'values' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"244","fix":"246"},{"desc":"247","fix":"248"},{"desc":"244","fix":"249"},{"desc":"244","fix":"250"},"Update the dependencies array to be: [params.id]",{"range":"251","text":"252"},{"range":"253","text":"252"},"Update the dependencies array to be: [currentPage, totalPages]",{"range":"254","text":"255"},{"range":"256","text":"252"},{"range":"257","text":"252"},[1876,1878],"[params.id]",[3359,3361],[1406,1419],"[currentPage, totalPages]",[2040,2042],[1302,1304]]